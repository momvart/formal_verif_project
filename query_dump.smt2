; start Z3 query
(declare-fun model_version0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select model_version0 #x00000003)
                   (concat (select model_version0 #x00000002)
                           (concat (select model_version0 #x00000001)
                                   (select model_version0 #x00000000))))))
  (not (not (= #x00000001 a!1)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(assert (not false))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (bvslt a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (not (bvslt a!1 a!2))))
(check-sat)
(reset)
; end Z3 query

; start Z3 query
(declare-fun input1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004))))))
  (not (bvslt a!1 a!2))))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x00000007)
                   (concat (select input1 #x00000006)
                           (concat (select input1 #x00000005)
                                   (select input1 #x00000004)))))
      (a!2 (concat (select input1 #x00000003)
                   (concat (select input1 #x00000002)
                           (concat (select input1 #x00000001)
                                   (select input1 #x00000000))))))
  (bvslt a!1 a!2)))
(assert (let ((a!1 (concat (select input1 #x0000000f)
                   (concat (select input1 #x0000000e)
                           (concat (select input1 #x0000000d)
                                   (select input1 #x0000000c)))))
      (a!2 (concat (select input1 #x0000000b)
                   (concat (select input1 #x0000000a)
                           (concat (select input1 #x00000009)
                                   (select input1 #x00000008))))))
  (not (not (= a!1 a!2)))))
(check-sat)
(reset)
; end Z3 query

